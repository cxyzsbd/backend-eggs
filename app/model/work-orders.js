'use strict';

module.exports = app => {
  const DataTypes = app.Sequelize;
  const sequelize = app.model;
  const attributes = {
    id: {
      type: DataTypes.BIGINT.UNSIGNED,
      allowNull: false,
      defaultValue: null,
      primaryKey: true,
      autoIncrement: false,
      comment: '工单号',
      field: 'id',
    },
    name: {
      type: DataTypes.STRING(60),
      allowNull: false,
      defaultValue: null,
      primaryKey: false,
      autoIncrement: false,
      comment: '任务名称',
      field: 'name',
    },
    type: {
      type: DataTypes.INTEGER(1),
      allowNull: false,
      defaultValue: null,
      primaryKey: false,
      autoIncrement: false,
      comment: '工单类型',
      field: 'type',
    },
    level: {
      type: DataTypes.INTEGER(1),
      allowNull: false,
      defaultValue: '1',
      primaryKey: false,
      autoIncrement: false,
      comment: '优先级(1:一般；2:紧急；3:非常紧急；)',
      field: 'level',
    },
    status: {
      type: DataTypes.INTEGER(1),
      allowNull: false,
      defaultValue: '0',
      primaryKey: false,
      autoIncrement: false,
      comment: '状态（0:新建，待分配；1:已分配；2:已认领；3:已完成）',
      field: 'status',
    },
    creator: {
      type: DataTypes.INTEGER(11).UNSIGNED,
      allowNull: false,
      defaultValue: null,
      primaryKey: false,
      autoIncrement: false,
      comment: '创建人',
      field: 'creator',
    },
    company_id: {
      type: DataTypes.INTEGER(11).UNSIGNED,
      allowNull: false,
      defaultValue: null,
      primaryKey: false,
      autoIncrement: false,
      comment: '公司id',
      field: 'company_id',
    },
    end_time: {
      type: DataTypes.DATE,
      allowNull: false,
      defaultValue: sequelize.literal('CURRENT_TIMESTAMP'),
      primaryKey: false,
      autoIncrement: false,
      comment: '截止时间',
      field: 'end_time',
    },
    desc: {
      type: DataTypes.STRING(255),
      allowNull: true,
      defaultValue: null,
      primaryKey: false,
      autoIncrement: false,
      comment: '描述',
      field: 'desc',
    },
    complete_at: {
      type: DataTypes.DATE,
      allowNull: true,
      defaultValue: null,
      primaryKey: false,
      autoIncrement: false,
      comment: '完成时间',
      field: 'complete_at',
    },
    approver: {
      type: DataTypes.INTEGER(11).UNSIGNED,
      allowNull: true,
      defaultValue: null,
      primaryKey: false,
      autoIncrement: false,
      comment: '审核人',
      field: 'approver',
    },
    handler: {
      type: DataTypes.INTEGER(11).UNSIGNED,
      allowNull: true,
      defaultValue: null,
      primaryKey: false,
      autoIncrement: false,
      comment: '处理人',
      field: 'handler',
    },
    handle_result: {
      type: DataTypes.INTEGER(1),
      allowNull: true,
      defaultValue: null,
      primaryKey: false,
      autoIncrement: false,
      comment: '完成结果：1:解决；2:未解决',
      field: 'handle_result',
    },
    remark: {
      type: DataTypes.TEXT,
      allowNull: true,
      defaultValue: null,
      primaryKey: false,
      autoIncrement: false,
      comment: '备注',
      field: 'remark',
    },
    commit_audios: {
      type: DataTypes.STRING(500),
      allowNull: true,
      defaultValue: null,
      primaryKey: false,
      autoIncrement: false,
      comment: '提交音频',
      field: 'commit_audios',
    },
    commit_imgs: {
      type: DataTypes.STRING(500),
      allowNull: true,
      defaultValue: null,
      primaryKey: false,
      autoIncrement: false,
      comment: '提交图片',
      field: 'commit_imgs',
    },
    handle_audios: {
      type: DataTypes.STRING(500),
      allowNull: true,
      defaultValue: null,
      primaryKey: false,
      autoIncrement: false,
      comment: '处理音频',
      field: 'handle_audios',
    },
    handle_imgs: {
      type: DataTypes.STRING(500),
      allowNull: true,
      defaultValue: null,
      primaryKey: false,
      autoIncrement: false,
      comment: '处理图片',
      field: 'handle_imgs',
    },
    create_at: {
      type: DataTypes.DATE,
      allowNull: false,
      defaultValue: sequelize.literal('CURRENT_TIMESTAMP'),
      primaryKey: false,
      autoIncrement: false,
      comment: null,
      field: 'create_at',
    },
  };
  const options = {
    tableName: 'work_orders',
    comment: '',
    indexes: [],
  };
  const WorkOrdersModel = sequelize.define('work_orders_model', attributes, options);
  WorkOrdersModel.associate = function() {
    WorkOrdersModel.hasMany(app.model.WorkOrderOperationRecords, { as: 'operation_records', sourceKey: 'id', foreignKey: 'work_order_id' });
    WorkOrdersModel.hasOne(app.model.Users, { as: 'creator_info', sourceKey: 'creator', foreignKey: 'id' });
    WorkOrdersModel.hasOne(app.model.Users, { as: 'approver_info', sourceKey: 'approver', foreignKey: 'id' });
    WorkOrdersModel.hasOne(app.model.Users, { as: 'handler_info', sourceKey: 'handler', foreignKey: 'id' });
  };
  return WorkOrdersModel;
};
